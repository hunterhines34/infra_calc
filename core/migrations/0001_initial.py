# Generated by Django 4.2.7 on 2024-12-06 15:17

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('website', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='StorageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100)),
                ('capacity', models.PositiveIntegerField(help_text='Capacity in GB')),
                ('storage_type', models.CharField(choices=[('SSD', 'Solid State Drive'), ('HDD', 'Hard Disk Drive'), ('NVMe', 'NVMe SSD')], max_length=10)),
                ('interface', models.CharField(max_length=50)),
                ('read_speed', models.PositiveIntegerField(help_text='Sequential read speed in MB/s')),
                ('write_speed', models.PositiveIntegerField(help_text='Sequential write speed in MB/s')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='RAMModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100)),
                ('capacity', models.PositiveIntegerField(help_text='Capacity in GB')),
                ('memory_type', models.CharField(choices=[('DDR4', 'DDR4'), ('DDR5', 'DDR5')], max_length=10)),
                ('speed', models.PositiveIntegerField(help_text='Speed in MHz')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='NetworkCardModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100)),
                ('speed', models.PositiveIntegerField(help_text='Speed in Gbps')),
                ('ports', models.PositiveIntegerField()),
                ('pcie_version', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('license_type', models.CharField(choices=[('OS', 'Operating System'), ('DB', 'Database'), ('VIRTUALIZATION', 'Virtualization'), ('OTHER', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_subscription', models.BooleanField(default=False)),
                ('subscription_period', models.PositiveIntegerField(blank=True, help_text='Period in months', null=True)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='GPUModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100)),
                ('memory_size', models.PositiveIntegerField(help_text='Memory size in GB')),
                ('memory_type', models.CharField(max_length=50)),
                ('base_clock', models.PositiveIntegerField(help_text='Base clock in MHz')),
                ('boost_clock', models.PositiveIntegerField(help_text='Boost clock in MHz')),
                ('tdp', models.PositiveIntegerField(help_text='Thermal Design Power in watts')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='CPUModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=100)),
                ('cores', models.PositiveIntegerField()),
                ('threads', models.PositiveIntegerField()),
                ('base_clock', models.DecimalField(decimal_places=2, help_text='Base clock speed in GHz', max_digits=5)),
                ('boost_clock', models.DecimalField(decimal_places=2, help_text='Boost clock speed in GHz', max_digits=5)),
                ('tdp', models.PositiveIntegerField(help_text='Thermal Design Power in watts')),
                ('socket', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.manufacturer')),
            ],
        ),
    ]
